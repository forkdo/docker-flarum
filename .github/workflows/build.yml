name: Build and Push

on:
  push:
    branches:
      - main
      - dev

jobs:
  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Docker Hub Credentials
        id: check_docker_creds
        run: |
          if [[ -n "${{ secrets.DOCKER_USER }}" && -n "${{ secrets.DOCKER_TOKEN }}" ]]; then
            echo "docker_creds_exist=true" >> $GITHUB_OUTPUT
          else
            echo "docker_creds_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to Docker Hub (if credentials are provided)
        if: steps.check_docker_creds.outputs.docker_creds_exist == 'true'
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Tags
        id: generate_tags
        env:
          IMAGE_REPO: ${{ github.repository_owner }}/flarum
        run: |
          # GHCR tags
          GHCR_REPO="ghcr.io/$IMAGE_REPO"

          TARGET="dev"
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            TARGET="main"
          fi

          # Docker Hub tags (if credentials provided)
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            if [[ "${{ steps.check_docker_creds.outputs.docker_creds_exist }}" == "true" ]]; then
              echo "DOCKER_REPO=docker.io/$IMAGE_REPO" >> $GITHUB_OUTPUT
              TARGET="all"
            fi
          fi
          echo "TARGET=$TARGET" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
             ${{ steps.generate_tags.outputs.GHCR_REPO }}
             ${{ steps.generate_tags.outputs.DOCKER_REPO }}
          labels: |
            org.opencontainers.image.title=Flarum
            org.opencontainers.image.description=Simple forum software for building great communities.
            org.opencontainers.image.vendor=Jetsung

      # - name: Build and Push Docker Images
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     platforms: linux/amd64
      #     build-args: GITHUB_SHA=${{ github.sha }}
      #     tags: |
      #       ${{ steps.generate_tags.outputs.ghcr_image_tag }}
      #       ${{ steps.generate_tags.outputs.ghcr_image_latest || '' }}
      #       ${{ steps.generate_tags.outputs.docker_image_tag || '' }}
      #       ${{ steps.generate_tags.outputs.docker_image_latest || '' }}

      - name: Build
        uses: docker/bake-action@v6
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: ${{ env.TARGET }}
          push: ${{ github.event_name != 'pull_request' }}

      - uses: actions/delete-package-versions@v5
        continue-on-error: true
        with:
          package-name: ${{ env.package_name }}
          package-type: 'container'
          delete-only-untagged-versions: 'true'
